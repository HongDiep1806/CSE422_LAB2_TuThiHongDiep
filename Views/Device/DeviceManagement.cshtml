@model List<Lab2_TuThiHongDiep_CSE422.Models.WebModel.GetAllDeviceResponse>

@{
    ViewData["Title"] = "Device List";
}
<div style="margin:unset">
    <h1>Device List</h1>

    <div class="mb-3" style="display:flex; align-items:center; gap:10px;">
        <div style="position: relative; width: 300px;">
            <input type="text" id="searchInput" class="form-control" placeholder="Search by Code or Name"
                   onkeyup="filterTable()" style="width: 100%; padding-right: 30px;" />
        </div>

        <div style="position: relative; width: 200px;">
            <select id="categoryFilter" class="form-control" onchange="filterTable()"
                    style="appearance: none; -webkit-appearance: none; -moz-appearance: none; padding-right: 30px;">
                <option value="">All Categories</option>
                @foreach (var category in Model.Select(m => m.CategoryName).Distinct())
                {
                    <option value="@category">@category</option>
                }
            </select>
            <span style="
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
                pointer-events: none;
                font-size: 12px;
                ">
                ▼
            </span>
        </div>

        <a asp-controller="Device" asp-action="CreateDevice" class="btn btn-success">Create New Device</a>
    </div>

    <table class="table" id="deviceTable">
        <thead>
            <tr>
                <th>Name</th>
                <th>User using</th>
                <th>Code</th>
                <th>Category</th>
                <th>Status</th>
                <th>Date Of Entry</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var device in Model)
            {
                <tr>
                    <td style="border-bottom:1px solid black">@device.Name</td>
                    <td style="border-bottom:1px solid black">@device.UserUsingName</td>
                    <td style="border-bottom:1px solid black">@device.Code</td>
                    <td style="border-bottom:1px solid black">@device.CategoryName</td>
                    <td style="border-bottom:1px solid black">@device.Status</td>
                    <td style="border-bottom:1px solid black">@device.DateOfEntry.ToString("yyyy-MM-dd")</td>
                    <td style="display:flex; flex-wrap:nowrap; border-bottom:1px solid black">
                        <a asp-controller="Device" asp-action="EditDevice" asp-route-id="@device.Id" class="btn btn-primary btn-sm" style="margin:0 5px">Edit</a>
                        <form asp-controller="Device" asp-action="DeleteDevice" method="post" onsubmit="return confirm('Are you sure you want to delete this device?');">
                            <input type="hidden" name="id" value="@device?.Id" />
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function filterTable() {
        const searchInput = document.getElementById("searchInput");
        const searchFilter = searchInput.value.toUpperCase();
        const categoryDropdown = document.getElementById("categoryFilter");
        const categoryFilter = categoryDropdown.value;
        const table = document.getElementById("deviceTable");
        const rows = table.getElementsByTagName("tr");

        for (let i = 1; i < rows.length; i++) {
            const nameCell = rows[i].getElementsByTagName("td")[0]; 
            const codeCell = rows[i].getElementsByTagName("td")[2];
            const categoryCell = rows[i].getElementsByTagName("td")[3];

            if (nameCell && codeCell && categoryCell) {
                const nameText = nameCell.textContent || nameCell.innerText;
                const codeText = codeCell.textContent || codeCell.innerText;
                const categoryText = categoryCell.textContent || categoryCell.innerText;

                const searchMatch = nameText.toUpperCase().includes(searchFilter) || codeText.toUpperCase().includes(searchFilter);
                const categoryMatch = categoryFilter === "" || categoryText === categoryFilter;

                rows[i].style.display = searchMatch && categoryMatch ? "" : "none";
            }
        }
    }
</script>
